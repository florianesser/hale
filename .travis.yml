---
language: java
jdk: oraclejdk8
sudo: required
dist: trusty
services:
  - docker
addons:
  apt:
    update: true
    packages:
      - python
      - python-pip
      - docker-ce
stages:
#  - test
  - name: build
    if: branch = master || branch = release
env:
  global:
    - _JAVA_OPTIONS: -Xmx6g
    - TERM: dumb
jobs:
  include:
#    - stage: test
#      if: type = pull_request
#      env:
#        - STAGE = commitStage
#      script:
#        # Output something every miute lest Travis kills the job
#        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
#        - HALE_GRADLE_CONSOLE=plain ./build.sh $STAGE
#        # Killing background sleep loop
#        - kill %1
#    - stage: test
#      if: branch = master
#      env:
#        - STAGE = integrationStage
#      script:
#        # Output something every miute lest Travis kills the job
#        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
#        - HALE_GRADLE_CONSOLE=plain ./build.sh $STAGE
#        # Killing background sleep loop
#        - kill %1
#    - stage: build
#      env:
#        - PLATFORM=macosx PRODUCT=HALE
#      before_install:
#        - sudo apt -qq update
#        - sudo apt install -y genisoimage
#      addons:
#        artifacts:
#          #s3_region: "eu-central-1"
#          #working_dir: build/target
#          paths:
#          - $(ls build/target/*macosx.cocoa* | tr "\n" ":")
#          target_paths:
#          - /travisci/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}
#          debug: true
#      script:
#        # Output something every miute lest Travis kills the job
#        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
#        - HALE_GRADLE_CONSOLE=plain ./build.sh product -a x86_64 -o $PLATFORM $PRODUCT
#        # Killing background sleep loop
#        - kill %1
#    - stage: build
#      env:
#        - PLATFORM=windows PRODUCT=HALE
#      addons:
#        artifacts:
#          #s3_region: "eu-central-1"
#          #working_dir: build/target
#          paths:
#          - $(ls build/target/*win32.win32* | tr "\n" ":")
#          target_paths:
#          - /travisci/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}
#          debug: true
#      script:
#        # Output something every miute lest Travis kills the job
#        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
#        - HALE_GRADLE_CONSOLE=plain ./build.sh product -a x86_64 -o $PLATFORM $PRODUCT
#        # Killing background sleep loop
#        - kill %1
    - stage: build
      env:
        - PLATFORM=linux PRODUCT=HALE
#      install:
#        - sudo pip install --upgrade --force-reinstall pip==9.0.3
#        - sudo pip install awscli
#      addons:
#        artifacts:
#          #s3_region: "eu-central-1"
#          #working_dir: build/target
#          paths:
#          - $(ls build/target/*linux.gtk* | tr "\n" ":")
#          target_paths:
#          - /travisci/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}
#          debug: true
      before_deploy:
        - ./generatebintraydesc.groovy -p hale-master -r hale -s ${BINTRAY_USER} --buildNumber ${TRAVIS_BUILD_NUMBER} --branch ${TRAVIS_BRANCH} && cat .bintray.json
      deploy:
        skip_cleanup: true
        provider: bintray
        file: .bintray.json
        user: ${BINTRAY_USER}
        key: ${BINTRAY_KEY}        
      after_deploy:
        - sleep 60
        - |
          ARTIFACT_VERSION=$(<.artifact-version); curl --silent --show-error --fail\
          -X PUT -H "Content-Type: application/json" -d'{"list_in_downloads": true}'\
          -u$BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com/file_metadata/$BINTRAY_USER/hale-master/hale-studio-$ARTIFACT_VERSION-linux.gtk.x86_64.tar.gz
        # Test
        - |
          ARTIFACT_VERSION=$(<.artifact-version); curl --silent --show-error --fail\
          -X PUT -H "Content-Type: application/json" -d'{"list_in_downloads": true}'\
          -u$BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com/file_metadata/$BINTRAY_USER/hale-master/hale-studio-$ARTIFACT_VERSION-linux.gtk.x86.tar.gz

      script:
        # Output something every miute lest Travis kills the job
        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
        #- HALE_GRADLE_CONSOLE=plain ./build.sh product -a x86_64 -o ${PLATFORM} ${PRODUCT}
        #- cd build && ./upload-site.sh
        #- HALE_GRADLE_CONSOLE=plain ./build.sh deployArtifacts
        - mkdir -p build/target
        - echo "3.5.0-SNAPSHOT" > build/.version.txt
        - echo "test" > build/target/hale-studio-3.5.0.SNAPSHOT-linux.gtk.x86_64.tar.gz
        - echo "test" > build/target/hale-studio-3.5.0.SNAPSHOT-linux.gtk.x86.tar.gz
        # Killing background sleep loop
        - kill %1
#    - stage: build
#      if: branch = master # should be 'branch = release'!
#      env:
#        - PLATFORM=linux PRODUCT=Infocenter
#      install:
#        - sudo pip install --upgrade pip
#        - sudo pip install --progress-bar off awscli
#      script:
#        # Output something every miute lest Travis kills the job
#        - while sleep 1m; do echo "=====[ $SECONDS seconds, still running... ]====="; done &
#        - HALE_GRADLE_CONSOLE=plain ./build.sh product -a x86_64 -o $PLATFORM --publish --latest $PRODUCT
#        # Killing background sleep loop
#        - kill %1
